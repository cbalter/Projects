schedule <- read.csv("/cloud/project/jazz-schedule.csv", header = TRUE)

win <- c(TRUE, FALSE)

jazz <- function(){
  wp_a <- .690 # wp_a is the win percentage for team a
  wp_b <- vector()
  for(i in 1:nrow(schedule)) {
    wp_b[i] <- schedule[i,2] / (schedule[i,2] + schedule[i,3]) # this produces each of the other teams win percentage
  }
  p_a <- (wp_a * (1 - wp_b)) / ((wp_a * (1 - wp_b)) + (wp_b * (1 - wp_a))) # calculating the probability that the jazz will win for each game
  new_p_a <- as.data.frame(p_a)
  wins <- vector()
  for (i in 1:nrow(new_p_a)) {
    wins[i] <- sample(win, size = 1, prob = c(new_p_a[i,], (1 - new_p_a[i,]))) # prob is the probability of winning and then losing (1-probability of winning) given by p_a
  }
  return(29 + sum(wins)) # there are 82 games per season. Adding 29 current winnings to predicted number
  }


jazz() # returns the number of predicted wins this season



Step 2
```{r}
n_reps <- 10000
first_sim <- replicate(n_reps, jazz()) # replicating this season 10000 times
```

Step 3
```{r}
win_60 <- function() {
prediction <- vector()
  for (i in 1:length(first_sim)) {
prediction[i] <- (first_sim[i] >= 60) # was the simulated total season wins greater than 60
  }
result <- sum(prediction) / n_reps # out of these 10000 simulations, what is the probability that the jazz won 60 or more games. Adding up all the trues and dividing by total sims
  return(result)
}


win_60() # the liklihood that the jazz win at least 60 games this season
```

Step 4
```{r}
p_hat <- win_60()
n <- n_reps
alpha <- 0.05

"Lower     Estimate     Upper" 
(ci <- p_hat + c(-1,0, 1) * qnorm(1 - alpha/2) * sqrt(p_hat * (1 - p_hat) / n))
```
